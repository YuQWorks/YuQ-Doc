(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{387:function(t,e,a){"use strict";a.r(e);var v=a(45),s=Object(v.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"关于信息的发送方与接收方"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于信息的发送方与接收方"}},[t._v("#")]),t._v(" 关于信息的发送方与接收方")]),t._v(" "),a("p",[t._v("YuQ中将发送对象和接受对象都称为"),a("code",[t._v("Contact")]),t._v("，然后在继承"),a("code",[t._v("Contact")]),t._v("的基础上，根据实际的聊天情况，出现了"),a("code",[t._v("Member")]),t._v("，"),a("code",[t._v("Friend")]),t._v("，"),a("code",[t._v("Group")]),t._v("等对象，分别用在不同的情况下。")]),t._v(" "),a("p",[t._v("下面我们开始介绍。")]),t._v(" "),a("h2",{attrs:{id:"contact"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#contact"}},[t._v("#")]),t._v(" Contact")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("Contact")]),t._v("中，最重要的方法是"),a("code",[t._v("sendMessage")]),t._v("，也就是发送信息的方法，这意味着我们可以随时通过"),a("code",[t._v("Contact")]),t._v("对象或者继承了"),a("code",[t._v("Contact")]),t._v("对象的其他对象直接使用该方法去发送信息，可以降低我们发送信息的难度。")]),t._v(" "),a("p",[a("code",[t._v("Contact")]),t._v("及继承"),a("code",[t._v("Contact")]),t._v("的其他对象，都会包含一个"),a("code",[t._v("id")]),t._v("属性，其类型为"),a("code",[t._v("Long")]),t._v("，通过这个id，可以简单的判断信息的具体来源，通常而言是信息来源的ID，比如信息来源某个群，那么id就是群号码，又或者信息来源好友聊天，那么id就会是发送者的QQ号码。")]),t._v(" "),a("p",[a("code",[t._v("Contact")]),t._v("还有一个"),a("code",[t._v("avatar")]),t._v("属性，其类型为"),a("code",[t._v("String")]),t._v("，保存着该聊天对象的头像。")]),t._v(" "),a("h2",{attrs:{id:"friend"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#friend"}},[t._v("#")]),t._v(" Friend")]),t._v(" "),a("p",[a("code",[t._v("Friend")]),t._v("对象其实通常而言比较少用，他直接继承自"),a("code",[t._v("Contact")]),t._v("对象，并且增加了一个"),a("code",[t._v("isFriend")]),t._v("的布尔类型参数，可以判断是否是好友。")]),t._v(" "),a("h2",{attrs:{id:"group-与-member"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#group-与-member"}},[t._v("#")]),t._v(" Group 与 Member")]),t._v(" "),a("p",[a("code",[t._v("Group")]),t._v("对象和"),a("code",[t._v("Member")]),t._v("对象则应该重点表述。我们先从群组成员"),a("code",[t._v("Member")]),t._v("开始说起吧。")]),t._v(" "),a("h3",{attrs:{id:"群成员-member"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#群成员-member"}},[t._v("#")]),t._v(" 群成员:Member")]),t._v(" "),a("p",[a("code",[t._v("Member")]),t._v("对象也是继承自"),a("code",[t._v("Contact")]),t._v("对象，主要的使用场景之一是"),a("RouterLink",{attrs:{to:"/advanced/controller.html"}},[t._v("路由系统")]),t._v("中方法注入，在方法中使用了"),a("code",[t._v("Member")]),t._v("来获取注入，则会自动得到一个"),a("code",[t._v("Member")]),t._v("方法。就像如下代码:")],1),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Action")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"菜单"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("menu")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Member")]),t._v(" qq"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[a("code",[t._v("Member")]),t._v("与"),a("code",[t._v("Friend")]),t._v("不同，他针对群聊添加了很多特别的方法和参数来提升开发效率。")]),t._v(" "),a("ul",[a("li",[t._v("title          属性可以查看群成员的头衔")]),t._v(" "),a("li",[t._v("isAdmin()      或者 isOwner()  可以判断是否是管理员或者是否是群主")]),t._v(" "),a("li",[t._v("kick(String s) 可以踢出群成员，其参数"),a("code",[t._v("String")]),t._v("表示的是踢出信息")]),t._v(" "),a("li",[t._v("at()           方法可以@对应的群成员")]),t._v(" "),a("li",[t._v("isBan()        可以检查是否被禁言")]),t._v(" "),a("li",[t._v("Ban(int Time)  可以禁言对应的时间，时间单位是秒")]),t._v(" "),a("li",[t._v("unBan()        可以解除禁言")]),t._v(" "),a("li",[t._v("click()        可以在群里进行戳一戳")])]),t._v(" "),a("h4",{attrs:{id:"匿名成员-anonymousmember"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#匿名成员-anonymousmember"}},[t._v("#")]),t._v(" 匿名成员：AnonymousMember")]),t._v(" "),a("p",[t._v("另外，有"),a("code",[t._v("AnonymousMember")]),t._v("从"),a("code",[t._v("Member")]),t._v("继承而来，不能对其发消息，也会默认的判定并非好友。所以无法对匿名发起私聊。")]),t._v(" "),a("h3",{attrs:{id:"群组对象-group"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#群组对象-group"}},[t._v("#")]),t._v(" 群组对象：Group")]),t._v(" "),a("p",[a("code",[t._v("Group")]),t._v("的使用场景和"),a("code",[t._v("Member")]),t._v("的常见场景一致，也同样添加了很多特殊方法。直接上示例和说明。")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Action")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"菜单"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("menu")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Group")]),t._v(" group"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("方法和参数说明：")]),t._v(" "),a("ul",[a("li",[t._v("Members  提供了一个<QQ号码，名称>构成的Map。")]),t._v(" "),a("li",[t._v("maxCount 群最大人数。")]),t._v(" "),a("li",[t._v("Owner    返回当前群的群主，类型是"),a("code",[t._v("Member")]),t._v("。")]),t._v(" "),a("li",[t._v("admins   返回一个由"),a("code",[t._v("Member")]),t._v("组成的List，其中是全部的群管理员。")]),t._v(" "),a("li",[t._v("leaves() 退群功能，如果机器人本身是群主，则会触发退群。")]),t._v(" "),a("li",[t._v("banAll() 全体禁言")]),t._v(" "),a("li",[t._v("unBanAll()  解除全体禁言")])]),t._v(" "),a("h2",{attrs:{id:"其他对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他对象"}},[t._v("#")]),t._v(" 其他对象")]),t._v(" "),a("p",[t._v("虽然以上三种已经可以满足基本需求，但是某些情况是不太够的，所以还有一些特殊情况使用的对象，他们和"),a("code",[t._v("Contact")]),t._v("继承而来的对象并不太一样。")]),t._v(" "),a("h3",{attrs:{id:"userinfo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#userinfo"}},[t._v("#")]),t._v(" UserInfo")]),t._v(" "),a("p",[t._v("这个对象主要出现在"),a("code",[t._v("NewFriendRequestEvent")]),t._v("（好友申请事件）、"),a("code",[t._v("GroupInviteEvent")]),t._v("（群邀请事件）和"),a("code",[t._v("GroupMemberRequestEvent")]),t._v("（入群申请事件中）。")]),t._v(" "),a("p",[t._v("与"),a("code",[t._v("Contact")]),t._v("继承的对象不同，"),a("code",[t._v("UserInfo")]),t._v("并不能发送信息，主要是在事件中进行信息判断。在"),a("code",[t._v("UserInfo")]),t._v("中包括了昵称，性别，年龄，等级等信息。")]),t._v(" "),a("h3",{attrs:{id:"groupinfo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#groupinfo"}},[t._v("#")]),t._v(" GroupInfo")]),t._v(" "),a("p",[t._v("该对象唯一出现的位置是"),a("code",[t._v("GroupInviteEvent")]),t._v("（群邀请事件），在该事件中获取Group即可得到该对象，这个对象内主要有群号码，群名称，群头像链接，群主和群管理员列表。")])])}),[],!1,null,null,null);e.default=s.exports}}]);