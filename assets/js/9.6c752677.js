(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{382:function(s,a,t){"use strict";t.r(a);var n=t(45),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"controller-进阶特性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#controller-进阶特性"}},[s._v("#")]),s._v(" Controller 进阶特性")]),s._v(" "),t("h2",{attrs:{id:"qmsg-注解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#qmsg-注解"}},[s._v("#")]),s._v(" QMsg 注解")]),s._v(" "),t("p",[s._v("我们先来看一看 QMsg 注解的结构。")]),s._v(" "),t("div",{staticClass:"language-kotlin line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-kotlin"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("annotation")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("QMsg")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 回复消息时 At 对方。")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" at"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Boolean "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 回复消息时使用回复功能，回复消息。")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" reply"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Boolean "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果 at 为 true 时，回复消息 At 对方并换行。")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" atNewLine"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Boolean "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 声明本 Action 必须 @机器人，或者直呼机器人名字触发。")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" mastAtBot"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Boolean "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 回复消息间隔时间自动撤回。")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" recall"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Long "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 完全匹配路由，当下级存在内容时不匹配本命令。")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" forceMatch"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Boolean "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[s._v("通过注释，我们可以很清楚的看到 QMsg 注解的结构。"),t("br"),s._v("\n同时也很清晰的理解 QMsg 注解的作用。")]),s._v(" "),t("p",[s._v("当您有需要的时候可以直接通过为 Action 方法声明 QMsg 注解并书写相应声明而实现功能。")]),s._v(" "),t("h2",{attrs:{id:"单-action-发送多条消息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#单-action-发送多条消息"}},[s._v("#")]),s._v(" 单 Action 发送多条消息")]),s._v(" "),t("p",[s._v("如果您有一个 Action 中发送多条消息的需求，您可以通过构建并返回一个 Object 数组来快速实现。"),t("br"),s._v("\n您也可以在多条 Message 中穿插 Int 与 Long，来指定多条 Message 之间的发送间隔。"),t("br"),s._v("\n发送间隔单位为毫秒。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("message1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" message2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" message3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("在这条示例代码中，当 Action 执行完毕时，会立即发送 message1，并间隔 1 秒后发送 message2，再次间隔 5 秒后发送 message3。"),t("br"),s._v("\n返回的 Object 数据将接受如下数据类型：")]),s._v(" "),t("ul",[t("li",[s._v("Int（作为时间间隔）")]),s._v(" "),t("li",[s._v("Long（作为时间间隔）")]),s._v(" "),t("li",[s._v("String（作为消息，可根据配置作为 RainCodeString 解析）")]),s._v(" "),t("li",[s._v("MessageItem（会被自动构建为 Message 并发送）")]),s._v(" "),t("li",[s._v("Message（作为消息，可正常触发自动撤回）")]),s._v(" "),t("li",[s._v("MessageLineQ（会被自动解析为 Message，然后发送）")])]),s._v(" "),t("p",[s._v("当出现不符合如上规则的内容时，将自动调用其 toString 方法，并作为 String 参数使用。")])])}),[],!1,null,null,null);a.default=e.exports}}]);