(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{172:function(t,e,s){"use strict";s.r(e);var n=s(0),r=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),s("p",[t._v("下面我们开始介绍。")]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),s("p",[s("code",[t._v("Member")]),t._v("对象也是继承自"),s("code",[t._v("Contact")]),t._v("对象，主要的使用场景之一是"),s("router-link",{attrs:{to:"./controller.html"}},[t._v("路由系统")]),t._v("中方法注入，在方法中使用了"),s("code",[t._v("Member")]),t._v("来获取注入，则会自动得到一个"),s("code",[t._v("Member")]),t._v("方法。就像如下代码:")],1),t._v(" "),t._m(11),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),s("p",[t._v("方法和参数说明：")]),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25),t._v(" "),t._m(26)])}),[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"关于信息的发送方与接收方"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关于信息的发送方与接收方"}},[this._v("#")]),this._v(" 关于信息的发送方与接收方")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("YuQ中将发送对象和接受对象都称为"),s("code",[t._v("Contact")]),t._v("，然后在继承"),s("code",[t._v("Contact")]),t._v("的基础上，根据实际的聊天情况，出现了"),s("code",[t._v("Member")]),t._v("，"),s("code",[t._v("Friend")]),t._v("，"),s("code",[t._v("Group")]),t._v("等对象，分别用在不同的情况下。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"contact"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#contact"}},[this._v("#")]),this._v(" Contact")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("在"),s("code",[t._v("Contact")]),t._v("中，最重要的方法是"),s("code",[t._v("sendMessage")]),t._v("，也就是发送信息的方法，这意味着我们可以随时通过"),s("code",[t._v("Contact")]),t._v("对象或者继承了"),s("code",[t._v("Contact")]),t._v("对象的其他对象直接使用该方法去发送信息，可以降低我们发送信息的难度。")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[s("code",[t._v("Contact")]),t._v("及继承"),s("code",[t._v("Contact")]),t._v("的其他对象，都会包含一个"),s("code",[t._v("id")]),t._v("属性，其类型为"),s("code",[t._v("Long")]),t._v("，通过这个id，可以简单的判断信息的具体来源，通常而言是信息来源的ID，比如信息来源某个群，那么id就是群号码，又或者信息来源好友聊天，那么id就会是发送者的QQ号码。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("Contact")]),this._v("还有一个"),e("code",[this._v("avatar")]),this._v("属性，其类型为"),e("code",[this._v("String")]),this._v("，保存着该聊天对象的头像。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"friend"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#friend"}},[this._v("#")]),this._v(" Friend")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("Friend")]),this._v("对象其实通常而言比较少用，他直接继承自"),e("code",[this._v("Contact")]),this._v("对象，并且增加了一个"),e("code",[this._v("isFriend")]),this._v("的布尔类型参数，可以判断是否是好友。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"group-与-member"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#group-与-member"}},[this._v("#")]),this._v(" Group 与 Member")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("Group")]),this._v("对象和"),e("code",[this._v("Member")]),this._v("对象则应该重点表述。我们先从群组成员"),e("code",[this._v("Member")]),this._v("开始说起吧。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"群成员-member"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#群成员-member"}},[this._v("#")]),this._v(" 群成员:Member")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Action")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"菜单"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("menu")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Member")]),t._v(" qq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("Member")]),this._v("与"),e("code",[this._v("Friend")]),this._v("不同，他针对群聊添加了很多特别的方法和参数来提升开发效率。")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("title          属性可以查看群成员的头衔")]),t._v(" "),s("li",[t._v("isAdmin()      或者 isOwner()  可以判断是否是管理员或者是否是群主")]),t._v(" "),s("li",[t._v("kick(String s) 可以踢出群成员，其参数"),s("code",[t._v("String")]),t._v("表示的是踢出信息")]),t._v(" "),s("li",[t._v("at()           方法可以@对应的群成员")]),t._v(" "),s("li",[t._v("isBan()        可以检查是否被禁言")]),t._v(" "),s("li",[t._v("Ban(int Time)  可以禁言对应的时间，时间单位是秒")]),t._v(" "),s("li",[t._v("unBan()        可以解除禁言")]),t._v(" "),s("li",[t._v("click()        可以在群里进行戳一戳")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"匿名成员：anonymousmember"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#匿名成员：anonymousmember"}},[this._v("#")]),this._v(" 匿名成员：AnonymousMember")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("另外，有"),e("code",[this._v("AnonymousMember")]),this._v("从"),e("code",[this._v("Member")]),this._v("继承而来，不能对其发消息，也会默认的判定并非好友。所以无法对匿名发起私聊。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"群组对象：group"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#群组对象：group"}},[this._v("#")]),this._v(" 群组对象：Group")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("Group")]),this._v("的使用场景和"),e("code",[this._v("Member")]),this._v("的常见场景一致，也同样添加了很多特殊方法。直接上示例和说明。")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Action")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"菜单"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("menu")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Group")]),t._v(" group"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("Members  提供了一个<QQ号码，名称>构成的Map。")]),t._v(" "),s("li",[t._v("maxCount 群最大人数。")]),t._v(" "),s("li",[t._v("Owner    返回当前群的群主，类型是"),s("code",[t._v("Member")]),t._v("。")]),t._v(" "),s("li",[t._v("admins   返回一个由"),s("code",[t._v("Member")]),t._v("组成的List，其中是全部的群管理员。")]),t._v(" "),s("li",[t._v("leaves() 退群功能，如果机器人本身是群主，则会触发退群。")]),t._v(" "),s("li",[t._v("banAll() 全体禁言")]),t._v(" "),s("li",[t._v("unBanAll()  解除全体禁言")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"其他对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他对象"}},[this._v("#")]),this._v(" 其他对象")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("虽然以上三种已经可以满足基本需求，但是某些情况是不太够的，所以还有一些特殊情况使用的对象，他们和"),e("code",[this._v("Contact")]),this._v("继承而来的对象并不太一样。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"userinfo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#userinfo"}},[this._v("#")]),this._v(" UserInfo")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("这个对象主要出现在"),e("code",[this._v("NewFriendRequestEvent")]),this._v("（好友申请事件）、"),e("code",[this._v("GroupInviteEvent")]),this._v("（群邀请事件）和"),e("code",[this._v("GroupMemberRequestEvent")]),this._v("（入群申请事件中）。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("与"),e("code",[this._v("Contact")]),this._v("继承的对象不同，"),e("code",[this._v("UserInfo")]),this._v("并不能发送信息，主要是在事件中进行信息判断。在"),e("code",[this._v("UserInfo")]),this._v("中包括了昵称，性别，年龄，等级等信息。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"groupinfo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#groupinfo"}},[this._v("#")]),this._v(" GroupInfo")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("该对象唯一出现的位置是"),e("code",[this._v("GroupInviteEvent")]),this._v("（群邀请事件），在该事件中获取Group即可得到该对象，这个对象内主要有群号码，群名称，群头像链接，群主和群管理员列表。")])}],!1,null,null,null);e.default=r.exports}}]);