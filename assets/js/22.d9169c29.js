(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{395:function(t,e,s){"use strict";s.r(e);var r=s(45),a=Object(r.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"概览"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概览"}},[t._v("#")]),t._v(" 概览")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("p",[t._v("1.建议拥有一定的java基础，如果遇到难以理解的词汇，请随时查阅 "),s("RouterLink",{attrs:{to:"/glossary.html"}},[t._v("术语表")]),t._v(" 或使用 "),s("a",{attrs:{href:"https://www.google.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("Google搜索"),s("OutboundLink")],1),t._v("。"),s("br"),t._v("\n2.如果对于文档有任何的建议或者其他想法，欢迎在"),s("a",{attrs:{href:"https://github.com/YuQWorks/YuQ-Doc",target:"_blank",rel:"noopener noreferrer"}},[t._v("项目地址"),s("OutboundLink")],1),t._v(" 提出issue。")],1)]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("p",[t._v("如果对于这里过于枯燥，请先简单略读之后直接前往"),s("RouterLink",{attrs:{to:"/guide/first-started.html"}},[t._v("安装")]),t._v("查看安装方法，运行demo并进行后续基础使用教程。")],1)]),t._v(" "),s("p",[t._v("YuQ 是一个由JAVA/Kotlin写成的机器人开发框架，其一开始的目的就是为了降低写机器人时候所需要的大量代码。\nYuQ在收到了信息以后，会对消息进行解析与处理并按照一定的顺序依次送往应该到达的位置，依次来达到所要的效果。"),s("br"),t._v("\n除基本的解析信息之外， YuQ拥有类似MVC中的Controller的路由系统并且相对而言更加多变更加适合机器人的命令情况，适合从头编写机器人的人。\n也有事件系统来应对群事件好友事件。还有定时任务、多路径扫包、加载插件等功能。\n需要注意，目前YuQ支持的最低JDK/JRE应该是1.8。")]),t._v(" "),s("h2",{attrs:{id:"yuq的工作顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#yuq的工作顺序"}},[t._v("#")]),t._v(" YuQ的工作顺序")]),t._v(" "),s("p",[t._v("YuQ本身是一个「无头 QQ 客户端」，当腾讯下发信息至客户端后，YuQ将其主要信息包装起来，然后依次走过Event（事件）----【Before（路由之前的过滤器)----\nAction(路由器节点)-----After（路由器之后的处理器）】"),s("br"),t._v("\n根据信息中的不同情况，消息内容被包装成了不同的对象，简单举例，比如消息本体会被封装成为"),s("code",[t._v("com.icecreamqaq.yuq.message.Message")]),t._v("信息对象，其中元素会组成"),s("code",[t._v("List<MessageItem>")]),t._v("\n发送者会组成"),s("code",[t._v("com.icecreamqaq.yuq.entity.Contact")]),t._v("对象。"),s("br"),t._v("\n而YuQ插件的编写者，则是根据YuQ的信息来编写处理与返回逻辑，让他实现自己所需要的功能。")]),t._v(" "),s("h2",{attrs:{id:"示意图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示意图"}},[t._v("#")]),t._v(" 示意图")]),t._v(" "),s("p",[t._v("后面有了补上")]),t._v(" "),s("h2",{attrs:{id:"特色"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特色"}},[t._v("#")]),t._v(" 特色")]),t._v(" "),s("ul",[s("li",[t._v("类似MVC的开发模式")]),t._v(" "),s("li",[t._v("插件式加载")]),t._v(" "),s("li",[t._v("多种处理方法")])])])}),[],!1,null,null,null);e.default=a.exports}}]);